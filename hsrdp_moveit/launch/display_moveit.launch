<launch>
  <arg name="db" default="false" />

  <arg name="debug" default="false" />
  
  <node name="serial_node" pkg="rosserial_python" type="serial_node.py" output="screen" >
		<param name="~port" value="/dev/ttyACM2"/>
	</node>

  <include file="$(find hsrdp_moveit)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <rosparam command="load" file="$(find hsrdp_moveit)/config/joint_names.yaml"/>

  <param name="robot_description" textfile="$(find hsrdp_bridge)/umi_rtx_100.urdf"/>
  
  
  <node name="umi_bridge" pkg="hsrdp_bridge" type="umi_bridge" />
  
  <!--
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="true"/>
  </node>
  -->
  
  <node name="trajectoryServer" ns="arm_controller" pkg="hsrdp_action" type="trajectoryServer" />
  
  <node name="gripperServer" ns="gripper_controller" pkg="hsrdp_action" type="gripperServer" />
  
<!--  <node name="arm_motion_node" pkg="hsrdp_arm_motion" type="hsrdp_arm_motion_node" /> -->
  
  <param name="moveit_controller_manager" value="moveit_simple_controller_manager/MoveItSimpleControllerManager"/>
  <!-- These ^^^,\/\/\/ are probably lalready started by planning ... need to check-->
  <rosparam file="$(find hsrdp_moveit)/config/controllers.yaml"/>
  
  <!--
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  -->

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) :P-->
  <include file="$(find hsrdp_moveit)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find hsrdp_moveit)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
</launch>
